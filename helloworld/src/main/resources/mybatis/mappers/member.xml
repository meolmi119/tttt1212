<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<!-- 리절트 맵 정의 -->
	<resultMap id="memberResult" type="MemberVO">
		<result property="mem_id" column="mem_id" />
		<result property="mem_pw" column="mem_pw" />
		<result property="mem_name" column="mem_name" />
		<result property="mem_rrn" column="mem_rrn" />

		<result property="mem_tel1" column="mem_tel1" />
		<result property="mem_tel2" column="mem_tel2" />
		<result property="mem_tel3" column="mem_tel3" />

		<result property="mem_email1" column="mem_email1" />
		<result property="mem_email2" column="mem_email2" />
		
		<result property="mem_roadAddress" column="mem_roadAddress" />
		<result property="mem_jibunAddress" column="mem_jibunAddress" />
		<result property="mem_namujiAddress" column="mem_namujiAddress" />
		<result property="mem_zipcode" column="mem_zipcode" />
		
		<result property="joinDate" column="joinDate" />
		<result property="del_yn" column="del_yn" />
		<result property="mem_point" column="mem_point" />
	</resultMap>

	<select id="login" resultType="memberVO" parameterType="java.util.Map">
		<![CDATA[
			select * from membert 
			 where mem_id=#{mem_id}
			 and mem_pw=#{mem_pw}			
		]]>
	</select>
	
	<!-- 아이디 중복확인 -->
	<select id="selectOverlappedID" parameterType="String" resultType="String">
	   	SELECT (CASE WHEN count(*)=1 THEN 'true'
					WHEN count(*)=0 THEN 'false'
				ELSE 'true'
				END)
	   from membert
	   where mem_id = #{id}
	</select>
		
	<!-- 회원가입 -->
	<insert id="insertNewMember" parameterType="memberVO">
		<![CDATA[
    	insert into membert(mem_id,
		 					 mem_pw,
                             mem_name,
                             mem_rrn,
                             mem_tel1,
                             mem_tel2,
                             mem_tel3,
                             mem_email1,
                             mem_email2,
                             mem_roadAddress,
                             mem_jibunAddress,
                             mem_namujiAddress,
                             mem_zipcode,
							del_yn)
					 values(#{mem_id},
							#{mem_pw},
							#{mem_name},
                           	#{mem_rrn},
                           	#{mem_tel1},
                           	#{mem_tel2},
                            #{mem_tel3},
                            #{mem_email1},
                            #{mem_email2},
                            #{mem_roadAddress},
                            #{mem_jibunAddress},
                            #{mem_namujiAddress},
                            #{mem_zipcode}, 
							'n')
   		]]>
	</insert>

	<!-- 회원 탈퇴-->
	<delete id="unregisterMember" parameterType="String">
		<![CDATA[ 
			delete from membert
			where mem_id=#{mem_id}
		]]>
	</delete>
	
	<!-- 회원정보조회(아이디찾기) -->
	<select id="selectMember" parameterType="String" resultType="MemberVO">
	<![CDATA[ 
			select * from membert
			where mem_name = #{mem_name}
			and mem_email1 = #{mem_email1}
			and mem_email2 = #{mem_email2}
		]]>
	</select>
	
	<!-- 회원정보조회(비밀번호 찾기) -->
	<select id="selectMemberID" parameterType="String" resultType="MemberVO">
	<![CDATA[ 
			select * from membert
			where mem_id = #{mem_id}
		]]>
	</select>
	
	<!-- 회원 조회(전체) -->
	<select id="selectAllMember" resultMap="memberResult">
	<![CDATA[ 
			select * from membert
		]]>
	</select>
	
	
	<!-- 카카오 회원가입 -->
	<insert id="insertKakao" parameterType="java.util.Map">
  <![CDATA[
    insert into membert(mem_id,
                         mem_pw,
                         mem_name,
                         mem_rrn,
                         mem_tel1,
                         mem_tel2,
                         mem_tel3,
                         mem_email1,
                         mem_email2,
                         mem_roadAddress,
                         mem_jibunAddress,
                         mem_namujiAddress,
                         mem_zipcode,
                         del_yn)
			    values(#{mem_id},
			           #{mem_pw},
			           #{mem_name},
			           #{mem_rrn},
			           #{mem_tel1},
			           #{mem_tel2},
			           #{mem_tel3},
			           #{mem_email1},
			           #{mem_email2},
			           #{mem_roadAddress},
			           #{mem_jibunAddress},
			           #{mem_namujiAddress},
			           #{mem_zipcode},
			           'n')
  ]]>
</insert>
	
	
</mapper>